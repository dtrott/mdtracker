package com.davidtrott.mdtracker.model;
// Generated May 11, 2010 12:22:15 AM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.*;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import org.hibernate.validator.NotNull;

/**
 * ModuleRange generated by hbm2java
 */
@Entity
@Table(name = "module_range", uniqueConstraints = @UniqueConstraint(columnNames = {
		"module_id", "start_version_id", "start_inclusive", "suggestion",
		"end_version_id", "end_inclusive"}))
public class ModuleRange implements java.io.Serializable {

	private int moduleRangeId;
	private int version;
	private VersionString versionStringByEndVersionId;
	private VersionString versionStringByLatestReleaseVersionId;
	private Module module;
	private VersionString versionStringByStartVersionId;
	private boolean startInclusive;
	private boolean suggestion;
	private boolean endInclusive;
	private Set<Dependency> dependencies = new HashSet<Dependency>(0);

	public ModuleRange() {
	}

	public ModuleRange(int moduleRangeId,
			VersionString versionStringByEndVersionId, Module module,
			VersionString versionStringByStartVersionId,
			boolean startInclusive, boolean suggestion, boolean endInclusive) {
		this.moduleRangeId = moduleRangeId;
		this.versionStringByEndVersionId = versionStringByEndVersionId;
		this.module = module;
		this.versionStringByStartVersionId = versionStringByStartVersionId;
		this.startInclusive = startInclusive;
		this.suggestion = suggestion;
		this.endInclusive = endInclusive;
	}
	public ModuleRange(int moduleRangeId,
			VersionString versionStringByEndVersionId,
			VersionString versionStringByLatestReleaseVersionId, Module module,
			VersionString versionStringByStartVersionId,
			boolean startInclusive, boolean suggestion, boolean endInclusive,
			Set<Dependency> dependencies) {
		this.moduleRangeId = moduleRangeId;
		this.versionStringByEndVersionId = versionStringByEndVersionId;
		this.versionStringByLatestReleaseVersionId = versionStringByLatestReleaseVersionId;
		this.module = module;
		this.versionStringByStartVersionId = versionStringByStartVersionId;
		this.startInclusive = startInclusive;
		this.suggestion = suggestion;
		this.endInclusive = endInclusive;
		this.dependencies = dependencies;
	}

	@Id
	@GeneratedValue
	@Column(name = "module_range_id", unique = true, nullable = false)
	public int getModuleRangeId() {
		return this.moduleRangeId;
	}

	public void setModuleRangeId(int moduleRangeId) {
		this.moduleRangeId = moduleRangeId;
	}

	@Version
	@Column(name = "version", nullable = false)
	public int getVersion() {
		return this.version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "end_version_id", nullable = false)
	@NotNull
	public VersionString getVersionStringByEndVersionId() {
		return this.versionStringByEndVersionId;
	}

	public void setVersionStringByEndVersionId(
			VersionString versionStringByEndVersionId) {
		this.versionStringByEndVersionId = versionStringByEndVersionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "latest_release_version_id")
	public VersionString getVersionStringByLatestReleaseVersionId() {
		return this.versionStringByLatestReleaseVersionId;
	}

	public void setVersionStringByLatestReleaseVersionId(
			VersionString versionStringByLatestReleaseVersionId) {
		this.versionStringByLatestReleaseVersionId = versionStringByLatestReleaseVersionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "module_id", nullable = false)
	@NotNull
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "start_version_id", nullable = false)
	@NotNull
	public VersionString getVersionStringByStartVersionId() {
		return this.versionStringByStartVersionId;
	}

	public void setVersionStringByStartVersionId(
			VersionString versionStringByStartVersionId) {
		this.versionStringByStartVersionId = versionStringByStartVersionId;
	}

	@Column(name = "start_inclusive", nullable = false)
	public boolean isStartInclusive() {
		return this.startInclusive;
	}

	public void setStartInclusive(boolean startInclusive) {
		this.startInclusive = startInclusive;
	}

	@Column(name = "suggestion", nullable = false)
	public boolean isSuggestion() {
		return this.suggestion;
	}

	public void setSuggestion(boolean suggestion) {
		this.suggestion = suggestion;
	}

	@Column(name = "end_inclusive", nullable = false)
	public boolean isEndInclusive() {
		return this.endInclusive;
	}

	public void setEndInclusive(boolean endInclusive) {
		this.endInclusive = endInclusive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "moduleRange")
	public Set<Dependency> getDependencies() {
		return this.dependencies;
	}

	public void setDependencies(Set<Dependency> dependencies) {
		this.dependencies = dependencies;
	}

}
