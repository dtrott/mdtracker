package com.davidtrott.mdtracker.model;
// Generated May 11, 2010 12:22:15 AM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.*;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;
import org.hibernate.validator.Length;

/**
 * VersionString generated by hbm2java
 */
@Entity
@Table(name = "version_string")
public class VersionString implements java.io.Serializable {

	private int versionId;
	private int version;
	private Integer major;
	private Integer minor;
	private Integer build;
	private boolean snapshot;
	private String custom;
	private Set<ModuleRange> moduleRangesForLatestReleaseVersionId = new HashSet<ModuleRange>(
			0);
	private Set<ModuleRange> moduleRangesForEndVersionId = new HashSet<ModuleRange>(
			0);
	private Set<ModuleVersion> moduleVersions = new HashSet<ModuleVersion>(0);
	private Set<ModuleRange> moduleRangesForStartVersionId = new HashSet<ModuleRange>(
			0);

	public VersionString() {
	}

	public VersionString(int versionId, boolean snapshot) {
		this.versionId = versionId;
		this.snapshot = snapshot;
	}
	public VersionString(int versionId, Integer major, Integer minor,
			Integer build, boolean snapshot, String custom,
			Set<ModuleRange> moduleRangesForLatestReleaseVersionId,
			Set<ModuleRange> moduleRangesForEndVersionId,
			Set<ModuleVersion> moduleVersions,
			Set<ModuleRange> moduleRangesForStartVersionId) {
		this.versionId = versionId;
		this.major = major;
		this.minor = minor;
		this.build = build;
		this.snapshot = snapshot;
		this.custom = custom;
		this.moduleRangesForLatestReleaseVersionId = moduleRangesForLatestReleaseVersionId;
		this.moduleRangesForEndVersionId = moduleRangesForEndVersionId;
		this.moduleVersions = moduleVersions;
		this.moduleRangesForStartVersionId = moduleRangesForStartVersionId;
	}

	@Id
	@GeneratedValue
	@Column(name = "version_id", unique = true, nullable = false)
	public int getVersionId() {
		return this.versionId;
	}

	public void setVersionId(int versionId) {
		this.versionId = versionId;
	}

	@Version
	@Column(name = "version", nullable = false)
	public int getVersion() {
		return this.version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@Column(name = "major")
	public Integer getMajor() {
		return this.major;
	}

	public void setMajor(Integer major) {
		this.major = major;
	}

	@Column(name = "minor")
	public Integer getMinor() {
		return this.minor;
	}

	public void setMinor(Integer minor) {
		this.minor = minor;
	}

	@Column(name = "build")
	public Integer getBuild() {
		return this.build;
	}

	public void setBuild(Integer build) {
		this.build = build;
	}

	@Column(name = "snapshot", nullable = false)
	public boolean isSnapshot() {
		return this.snapshot;
	}

	public void setSnapshot(boolean snapshot) {
		this.snapshot = snapshot;
	}

	@Column(name = "custom", length = 100)
	@Length(max = 100)
	public String getCustom() {
		return this.custom;
	}

	public void setCustom(String custom) {
		this.custom = custom;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "versionStringByLatestReleaseVersionId")
	public Set<ModuleRange> getModuleRangesForLatestReleaseVersionId() {
		return this.moduleRangesForLatestReleaseVersionId;
	}

	public void setModuleRangesForLatestReleaseVersionId(
			Set<ModuleRange> moduleRangesForLatestReleaseVersionId) {
		this.moduleRangesForLatestReleaseVersionId = moduleRangesForLatestReleaseVersionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "versionStringByEndVersionId")
	public Set<ModuleRange> getModuleRangesForEndVersionId() {
		return this.moduleRangesForEndVersionId;
	}

	public void setModuleRangesForEndVersionId(
			Set<ModuleRange> moduleRangesForEndVersionId) {
		this.moduleRangesForEndVersionId = moduleRangesForEndVersionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "versionString")
	public Set<ModuleVersion> getModuleVersions() {
		return this.moduleVersions;
	}

	public void setModuleVersions(Set<ModuleVersion> moduleVersions) {
		this.moduleVersions = moduleVersions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "versionStringByStartVersionId")
	public Set<ModuleRange> getModuleRangesForStartVersionId() {
		return this.moduleRangesForStartVersionId;
	}

	public void setModuleRangesForStartVersionId(
			Set<ModuleRange> moduleRangesForStartVersionId) {
		this.moduleRangesForStartVersionId = moduleRangesForStartVersionId;
	}

}
